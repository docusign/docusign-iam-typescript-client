/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RevokeWorkspaceUserAccessRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace to revoke access from
   */
  workspaceId: string;
  /**
   * The ID of the user to be revoked from the workspace
   */
  userId: string;
  /**
   * Optional details. Allows scheduling the revocation for the future
   */
  revokeWorkspaceUserDetails?:
    | components.RevokeWorkspaceUserDetails
    | undefined;
};

/** @internal */
export const RevokeWorkspaceUserAccessRequest$inboundSchema: z.ZodType<
  RevokeWorkspaceUserAccessRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  userId: z.string(),
  RevokeWorkspaceUserDetails: components
    .RevokeWorkspaceUserDetails$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "RevokeWorkspaceUserDetails": "revokeWorkspaceUserDetails",
  });
});

/** @internal */
export type RevokeWorkspaceUserAccessRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  userId: string;
  RevokeWorkspaceUserDetails?:
    | components.RevokeWorkspaceUserDetails$Outbound
    | undefined;
};

/** @internal */
export const RevokeWorkspaceUserAccessRequest$outboundSchema: z.ZodType<
  RevokeWorkspaceUserAccessRequest$Outbound,
  z.ZodTypeDef,
  RevokeWorkspaceUserAccessRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  userId: z.string(),
  revokeWorkspaceUserDetails: components
    .RevokeWorkspaceUserDetails$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    revokeWorkspaceUserDetails: "RevokeWorkspaceUserDetails",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevokeWorkspaceUserAccessRequest$ {
  /** @deprecated use `RevokeWorkspaceUserAccessRequest$inboundSchema` instead. */
  export const inboundSchema = RevokeWorkspaceUserAccessRequest$inboundSchema;
  /** @deprecated use `RevokeWorkspaceUserAccessRequest$outboundSchema` instead. */
  export const outboundSchema = RevokeWorkspaceUserAccessRequest$outboundSchema;
  /** @deprecated use `RevokeWorkspaceUserAccessRequest$Outbound` instead. */
  export type Outbound = RevokeWorkspaceUserAccessRequest$Outbound;
}

export function revokeWorkspaceUserAccessRequestToJSON(
  revokeWorkspaceUserAccessRequest: RevokeWorkspaceUserAccessRequest,
): string {
  return JSON.stringify(
    RevokeWorkspaceUserAccessRequest$outboundSchema.parse(
      revokeWorkspaceUserAccessRequest,
    ),
  );
}

export function revokeWorkspaceUserAccessRequestFromJSON(
  jsonString: string,
): SafeParseResult<RevokeWorkspaceUserAccessRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevokeWorkspaceUserAccessRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevokeWorkspaceUserAccessRequest' from JSON`,
  );
}
