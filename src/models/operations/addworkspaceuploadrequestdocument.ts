/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddWorkspaceUploadRequestDocumentRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
  /**
   * The ID of the upload request
   */
  uploadRequestId: string;
  addWorkspaceUploadRequestDocumentRequest?:
    | components.AddWorkspaceUploadRequestDocumentRequest
    | undefined;
};

/** @internal */
export const AddWorkspaceUploadRequestDocumentRequest$inboundSchema: z.ZodType<
  AddWorkspaceUploadRequestDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  uploadRequestId: z.string(),
  AddWorkspaceUploadRequestDocumentRequest: components
    .AddWorkspaceUploadRequestDocumentRequest$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "AddWorkspaceUploadRequestDocumentRequest":
      "addWorkspaceUploadRequestDocumentRequest",
  });
});

/** @internal */
export type AddWorkspaceUploadRequestDocumentRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  uploadRequestId: string;
  AddWorkspaceUploadRequestDocumentRequest?:
    | components.AddWorkspaceUploadRequestDocumentRequest$Outbound
    | undefined;
};

/** @internal */
export const AddWorkspaceUploadRequestDocumentRequest$outboundSchema: z.ZodType<
  AddWorkspaceUploadRequestDocumentRequest$Outbound,
  z.ZodTypeDef,
  AddWorkspaceUploadRequestDocumentRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  uploadRequestId: z.string(),
  addWorkspaceUploadRequestDocumentRequest: components
    .AddWorkspaceUploadRequestDocumentRequest$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    addWorkspaceUploadRequestDocumentRequest:
      "AddWorkspaceUploadRequestDocumentRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddWorkspaceUploadRequestDocumentRequest$ {
  /** @deprecated use `AddWorkspaceUploadRequestDocumentRequest$inboundSchema` instead. */
  export const inboundSchema =
    AddWorkspaceUploadRequestDocumentRequest$inboundSchema;
  /** @deprecated use `AddWorkspaceUploadRequestDocumentRequest$outboundSchema` instead. */
  export const outboundSchema =
    AddWorkspaceUploadRequestDocumentRequest$outboundSchema;
  /** @deprecated use `AddWorkspaceUploadRequestDocumentRequest$Outbound` instead. */
  export type Outbound = AddWorkspaceUploadRequestDocumentRequest$Outbound;
}

export function addWorkspaceUploadRequestDocumentRequestToJSON(
  addWorkspaceUploadRequestDocumentRequest:
    AddWorkspaceUploadRequestDocumentRequest,
): string {
  return JSON.stringify(
    AddWorkspaceUploadRequestDocumentRequest$outboundSchema.parse(
      addWorkspaceUploadRequestDocumentRequest,
    ),
  );
}

export function addWorkspaceUploadRequestDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AddWorkspaceUploadRequestDocumentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AddWorkspaceUploadRequestDocumentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AddWorkspaceUploadRequestDocumentRequest' from JSON`,
  );
}
