/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateWorkspaceUploadRequestRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
  /**
   * The upload request details including name, description, assignments, and status
   */
  createWorkspaceUploadRequestBody: components.CreateWorkspaceUploadRequestBody;
};

/** @internal */
export const CreateWorkspaceUploadRequestRequest$inboundSchema: z.ZodType<
  CreateWorkspaceUploadRequestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  CreateWorkspaceUploadRequestBody:
    components.CreateWorkspaceUploadRequestBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreateWorkspaceUploadRequestBody": "createWorkspaceUploadRequestBody",
  });
});

/** @internal */
export type CreateWorkspaceUploadRequestRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  CreateWorkspaceUploadRequestBody:
    components.CreateWorkspaceUploadRequestBody$Outbound;
};

/** @internal */
export const CreateWorkspaceUploadRequestRequest$outboundSchema: z.ZodType<
  CreateWorkspaceUploadRequestRequest$Outbound,
  z.ZodTypeDef,
  CreateWorkspaceUploadRequestRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  createWorkspaceUploadRequestBody:
    components.CreateWorkspaceUploadRequestBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createWorkspaceUploadRequestBody: "CreateWorkspaceUploadRequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWorkspaceUploadRequestRequest$ {
  /** @deprecated use `CreateWorkspaceUploadRequestRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateWorkspaceUploadRequestRequest$inboundSchema;
  /** @deprecated use `CreateWorkspaceUploadRequestRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateWorkspaceUploadRequestRequest$outboundSchema;
  /** @deprecated use `CreateWorkspaceUploadRequestRequest$Outbound` instead. */
  export type Outbound = CreateWorkspaceUploadRequestRequest$Outbound;
}

export function createWorkspaceUploadRequestRequestToJSON(
  createWorkspaceUploadRequestRequest: CreateWorkspaceUploadRequestRequest,
): string {
  return JSON.stringify(
    CreateWorkspaceUploadRequestRequest$outboundSchema.parse(
      createWorkspaceUploadRequestRequest,
    ),
  );
}

export function createWorkspaceUploadRequestRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateWorkspaceUploadRequestRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateWorkspaceUploadRequestRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateWorkspaceUploadRequestRequest' from JSON`,
  );
}
