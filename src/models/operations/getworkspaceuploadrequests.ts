/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetWorkspaceUploadRequestsRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
};

/** @internal */
export const GetWorkspaceUploadRequestsRequest$inboundSchema: z.ZodType<
  GetWorkspaceUploadRequestsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
});

/** @internal */
export type GetWorkspaceUploadRequestsRequest$Outbound = {
  accountId: string;
  workspaceId: string;
};

/** @internal */
export const GetWorkspaceUploadRequestsRequest$outboundSchema: z.ZodType<
  GetWorkspaceUploadRequestsRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceUploadRequestsRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceUploadRequestsRequest$ {
  /** @deprecated use `GetWorkspaceUploadRequestsRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceUploadRequestsRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceUploadRequestsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetWorkspaceUploadRequestsRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceUploadRequestsRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceUploadRequestsRequest$Outbound;
}

export function getWorkspaceUploadRequestsRequestToJSON(
  getWorkspaceUploadRequestsRequest: GetWorkspaceUploadRequestsRequest,
): string {
  return JSON.stringify(
    GetWorkspaceUploadRequestsRequest$outboundSchema.parse(
      getWorkspaceUploadRequestsRequest,
    ),
  );
}

export function getWorkspaceUploadRequestsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceUploadRequestsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetWorkspaceUploadRequestsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceUploadRequestsRequest' from JSON`,
  );
}
