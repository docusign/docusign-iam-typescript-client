/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetWorkspaceAssignableRolesRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
  /**
   * A search filter that returns assignable roles by the beginning of the role name
   */
  filter?: string | undefined;
  /**
   * The index position within the total result set from which to start returning values. The default value is 0
   */
  startPosition?: number | undefined;
  /**
   * The number of results to return. This value must be a number between 1 and 100 (default)
   */
  count?: number | undefined;
};

/** @internal */
export const GetWorkspaceAssignableRolesRequest$inboundSchema: z.ZodType<
  GetWorkspaceAssignableRolesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  filter: z.string().optional(),
  start_position: z.number().int().optional(),
  count: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "start_position": "startPosition",
  });
});

/** @internal */
export type GetWorkspaceAssignableRolesRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  filter?: string | undefined;
  start_position?: number | undefined;
  count?: number | undefined;
};

/** @internal */
export const GetWorkspaceAssignableRolesRequest$outboundSchema: z.ZodType<
  GetWorkspaceAssignableRolesRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceAssignableRolesRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  filter: z.string().optional(),
  startPosition: z.number().int().optional(),
  count: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    startPosition: "start_position",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceAssignableRolesRequest$ {
  /** @deprecated use `GetWorkspaceAssignableRolesRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceAssignableRolesRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceAssignableRolesRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetWorkspaceAssignableRolesRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceAssignableRolesRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceAssignableRolesRequest$Outbound;
}

export function getWorkspaceAssignableRolesRequestToJSON(
  getWorkspaceAssignableRolesRequest: GetWorkspaceAssignableRolesRequest,
): string {
  return JSON.stringify(
    GetWorkspaceAssignableRolesRequest$outboundSchema.parse(
      getWorkspaceAssignableRolesRequest,
    ),
  );
}

export function getWorkspaceAssignableRolesRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceAssignableRolesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetWorkspaceAssignableRolesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceAssignableRolesRequest' from JSON`,
  );
}
