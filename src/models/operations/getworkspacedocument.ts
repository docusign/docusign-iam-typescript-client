/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetWorkspaceDocumentRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
  /**
   * The ID of the document
   */
  documentId: string;
};

/** @internal */
export const GetWorkspaceDocumentRequest$inboundSchema: z.ZodType<
  GetWorkspaceDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  documentId: z.string(),
});

/** @internal */
export type GetWorkspaceDocumentRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  documentId: string;
};

/** @internal */
export const GetWorkspaceDocumentRequest$outboundSchema: z.ZodType<
  GetWorkspaceDocumentRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceDocumentRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  documentId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceDocumentRequest$ {
  /** @deprecated use `GetWorkspaceDocumentRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceDocumentRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceDocumentRequest$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceDocumentRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceDocumentRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceDocumentRequest$Outbound;
}

export function getWorkspaceDocumentRequestToJSON(
  getWorkspaceDocumentRequest: GetWorkspaceDocumentRequest,
): string {
  return JSON.stringify(
    GetWorkspaceDocumentRequest$outboundSchema.parse(
      getWorkspaceDocumentRequest,
    ),
  );
}

export function getWorkspaceDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceDocumentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetWorkspaceDocumentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceDocumentRequest' from JSON`,
  );
}
