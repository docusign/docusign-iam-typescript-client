/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RestoreWorkspaceUserAccessRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace to restore access
   */
  workspaceId: string;
  /**
   * The ID of the user to be restored to the workspace
   */
  userId: string;
};

/** @internal */
export const RestoreWorkspaceUserAccessRequest$inboundSchema: z.ZodType<
  RestoreWorkspaceUserAccessRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  userId: z.string(),
});

/** @internal */
export type RestoreWorkspaceUserAccessRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  userId: string;
};

/** @internal */
export const RestoreWorkspaceUserAccessRequest$outboundSchema: z.ZodType<
  RestoreWorkspaceUserAccessRequest$Outbound,
  z.ZodTypeDef,
  RestoreWorkspaceUserAccessRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  userId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RestoreWorkspaceUserAccessRequest$ {
  /** @deprecated use `RestoreWorkspaceUserAccessRequest$inboundSchema` instead. */
  export const inboundSchema = RestoreWorkspaceUserAccessRequest$inboundSchema;
  /** @deprecated use `RestoreWorkspaceUserAccessRequest$outboundSchema` instead. */
  export const outboundSchema =
    RestoreWorkspaceUserAccessRequest$outboundSchema;
  /** @deprecated use `RestoreWorkspaceUserAccessRequest$Outbound` instead. */
  export type Outbound = RestoreWorkspaceUserAccessRequest$Outbound;
}

export function restoreWorkspaceUserAccessRequestToJSON(
  restoreWorkspaceUserAccessRequest: RestoreWorkspaceUserAccessRequest,
): string {
  return JSON.stringify(
    RestoreWorkspaceUserAccessRequest$outboundSchema.parse(
      restoreWorkspaceUserAccessRequest,
    ),
  );
}

export function restoreWorkspaceUserAccessRequestFromJSON(
  jsonString: string,
): SafeParseResult<RestoreWorkspaceUserAccessRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RestoreWorkspaceUserAccessRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RestoreWorkspaceUserAccessRequest' from JSON`,
  );
}
