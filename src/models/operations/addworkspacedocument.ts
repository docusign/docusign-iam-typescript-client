/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AddWorkspaceDocumentRequest = {
  /**
   * The ID of the account
   */
  accountId: string;
  /**
   * The ID of the workspace
   */
  workspaceId: string;
  addWorkspaceDocumentRequest?:
    | components.AddWorkspaceDocumentRequest
    | undefined;
};

/** @internal */
export const AddWorkspaceDocumentRequest$inboundSchema: z.ZodType<
  AddWorkspaceDocumentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  AddWorkspaceDocumentRequest: components
    .AddWorkspaceDocumentRequest$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "AddWorkspaceDocumentRequest": "addWorkspaceDocumentRequest",
  });
});

/** @internal */
export type AddWorkspaceDocumentRequest$Outbound = {
  accountId: string;
  workspaceId: string;
  AddWorkspaceDocumentRequest?:
    | components.AddWorkspaceDocumentRequest$Outbound
    | undefined;
};

/** @internal */
export const AddWorkspaceDocumentRequest$outboundSchema: z.ZodType<
  AddWorkspaceDocumentRequest$Outbound,
  z.ZodTypeDef,
  AddWorkspaceDocumentRequest
> = z.object({
  accountId: z.string(),
  workspaceId: z.string(),
  addWorkspaceDocumentRequest: components
    .AddWorkspaceDocumentRequest$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    addWorkspaceDocumentRequest: "AddWorkspaceDocumentRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddWorkspaceDocumentRequest$ {
  /** @deprecated use `AddWorkspaceDocumentRequest$inboundSchema` instead. */
  export const inboundSchema = AddWorkspaceDocumentRequest$inboundSchema;
  /** @deprecated use `AddWorkspaceDocumentRequest$outboundSchema` instead. */
  export const outboundSchema = AddWorkspaceDocumentRequest$outboundSchema;
  /** @deprecated use `AddWorkspaceDocumentRequest$Outbound` instead. */
  export type Outbound = AddWorkspaceDocumentRequest$Outbound;
}

export function addWorkspaceDocumentRequestToJSON(
  addWorkspaceDocumentRequest: AddWorkspaceDocumentRequest,
): string {
  return JSON.stringify(
    AddWorkspaceDocumentRequest$outboundSchema.parse(
      addWorkspaceDocumentRequest,
    ),
  );
}

export function addWorkspaceDocumentRequestFromJSON(
  jsonString: string,
): SafeParseResult<AddWorkspaceDocumentRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AddWorkspaceDocumentRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AddWorkspaceDocumentRequest' from JSON`,
  );
}
