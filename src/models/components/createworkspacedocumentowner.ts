/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateWorkspaceDocumentOwner = {
  userId?: string | null | undefined;
  firstName?: string | null | undefined;
  lastName?: string | null | undefined;
};

/** @internal */
export const CreateWorkspaceDocumentOwner$inboundSchema: z.ZodType<
  CreateWorkspaceDocumentOwner,
  z.ZodTypeDef,
  unknown
> = z.object({
  user_id: z.nullable(z.string()).optional(),
  first_name: z.nullable(z.string()).optional(),
  last_name: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "user_id": "userId",
    "first_name": "firstName",
    "last_name": "lastName",
  });
});

/** @internal */
export type CreateWorkspaceDocumentOwner$Outbound = {
  user_id?: string | null | undefined;
  first_name?: string | null | undefined;
  last_name?: string | null | undefined;
};

/** @internal */
export const CreateWorkspaceDocumentOwner$outboundSchema: z.ZodType<
  CreateWorkspaceDocumentOwner$Outbound,
  z.ZodTypeDef,
  CreateWorkspaceDocumentOwner
> = z.object({
  userId: z.nullable(z.string()).optional(),
  firstName: z.nullable(z.string()).optional(),
  lastName: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    userId: "user_id",
    firstName: "first_name",
    lastName: "last_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWorkspaceDocumentOwner$ {
  /** @deprecated use `CreateWorkspaceDocumentOwner$inboundSchema` instead. */
  export const inboundSchema = CreateWorkspaceDocumentOwner$inboundSchema;
  /** @deprecated use `CreateWorkspaceDocumentOwner$outboundSchema` instead. */
  export const outboundSchema = CreateWorkspaceDocumentOwner$outboundSchema;
  /** @deprecated use `CreateWorkspaceDocumentOwner$Outbound` instead. */
  export type Outbound = CreateWorkspaceDocumentOwner$Outbound;
}

export function createWorkspaceDocumentOwnerToJSON(
  createWorkspaceDocumentOwner: CreateWorkspaceDocumentOwner,
): string {
  return JSON.stringify(
    CreateWorkspaceDocumentOwner$outboundSchema.parse(
      createWorkspaceDocumentOwner,
    ),
  );
}

export function createWorkspaceDocumentOwnerFromJSON(
  jsonString: string,
): SafeParseResult<CreateWorkspaceDocumentOwner, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateWorkspaceDocumentOwner$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateWorkspaceDocumentOwner' from JSON`,
  );
}
