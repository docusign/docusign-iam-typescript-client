/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WorkspaceUploadRequest,
  WorkspaceUploadRequest$inboundSchema,
  WorkspaceUploadRequest$Outbound,
  WorkspaceUploadRequest$outboundSchema,
} from "./workspaceuploadrequest.js";

/**
 * Response containing a list of upload requests
 */
export type GetWorkspaceUploadRequestsResponse = {
  /**
   * The upload request list
   */
  data: Array<WorkspaceUploadRequest> | null;
};

/** @internal */
export const GetWorkspaceUploadRequestsResponse$inboundSchema: z.ZodType<
  GetWorkspaceUploadRequestsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.nullable(z.array(WorkspaceUploadRequest$inboundSchema)),
});

/** @internal */
export type GetWorkspaceUploadRequestsResponse$Outbound = {
  data: Array<WorkspaceUploadRequest$Outbound> | null;
};

/** @internal */
export const GetWorkspaceUploadRequestsResponse$outboundSchema: z.ZodType<
  GetWorkspaceUploadRequestsResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspaceUploadRequestsResponse
> = z.object({
  data: z.nullable(z.array(WorkspaceUploadRequest$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceUploadRequestsResponse$ {
  /** @deprecated use `GetWorkspaceUploadRequestsResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceUploadRequestsResponse$inboundSchema;
  /** @deprecated use `GetWorkspaceUploadRequestsResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetWorkspaceUploadRequestsResponse$outboundSchema;
  /** @deprecated use `GetWorkspaceUploadRequestsResponse$Outbound` instead. */
  export type Outbound = GetWorkspaceUploadRequestsResponse$Outbound;
}

export function getWorkspaceUploadRequestsResponseToJSON(
  getWorkspaceUploadRequestsResponse: GetWorkspaceUploadRequestsResponse,
): string {
  return JSON.stringify(
    GetWorkspaceUploadRequestsResponse$outboundSchema.parse(
      getWorkspaceUploadRequestsResponse,
    ),
  );
}

export function getWorkspaceUploadRequestsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceUploadRequestsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetWorkspaceUploadRequestsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceUploadRequestsResponse' from JSON`,
  );
}
