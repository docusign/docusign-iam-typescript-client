/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Indicates that the ability to create new workflow instances from this workflow has been resumed.
 *
 * @remarks
 * Existing workflow instances will be unaffected.
 */
export type ResumeNewWorkflowInstancesSuccess = {
  /**
   * Represents the new state of a workflow's mechanism to permit new workflow instances from being created.
   *
   * @remarks
   * Valid values include:
   *
   *   - active
   *   - paused
   */
  status?: string | undefined;
};

/** @internal */
export const ResumeNewWorkflowInstancesSuccess$inboundSchema: z.ZodType<
  ResumeNewWorkflowInstancesSuccess,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
});

/** @internal */
export type ResumeNewWorkflowInstancesSuccess$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const ResumeNewWorkflowInstancesSuccess$outboundSchema: z.ZodType<
  ResumeNewWorkflowInstancesSuccess$Outbound,
  z.ZodTypeDef,
  ResumeNewWorkflowInstancesSuccess
> = z.object({
  status: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResumeNewWorkflowInstancesSuccess$ {
  /** @deprecated use `ResumeNewWorkflowInstancesSuccess$inboundSchema` instead. */
  export const inboundSchema = ResumeNewWorkflowInstancesSuccess$inboundSchema;
  /** @deprecated use `ResumeNewWorkflowInstancesSuccess$outboundSchema` instead. */
  export const outboundSchema =
    ResumeNewWorkflowInstancesSuccess$outboundSchema;
  /** @deprecated use `ResumeNewWorkflowInstancesSuccess$Outbound` instead. */
  export type Outbound = ResumeNewWorkflowInstancesSuccess$Outbound;
}

export function resumeNewWorkflowInstancesSuccessToJSON(
  resumeNewWorkflowInstancesSuccess: ResumeNewWorkflowInstancesSuccess,
): string {
  return JSON.stringify(
    ResumeNewWorkflowInstancesSuccess$outboundSchema.parse(
      resumeNewWorkflowInstancesSuccess,
    ),
  );
}

export function resumeNewWorkflowInstancesSuccessFromJSON(
  jsonString: string,
): SafeParseResult<ResumeNewWorkflowInstancesSuccess, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResumeNewWorkflowInstancesSuccess$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResumeNewWorkflowInstancesSuccess' from JSON`,
  );
}
